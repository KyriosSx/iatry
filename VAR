import tkinter as tk
from tkinter import filedialog
from statsmodels.tsa.api import VAR
import pandas as pd
import numpy as np

def select_history():
    global history
    file_path = filedialog.askopenfilename()
    history = pd.read_csv(file_path)

def select_future():
    global future
    file_path = filedialog.askopenfilename()
    future = pd.read_csv(file_path)

def predict():
    global prediction
    model = VAR(history)
    model_fit = model.fit()
    prediction = model_fit.forecast(model_fit.y, steps=future.shape[0])
    prediction = pd.DataFrame(prediction, columns=history.columns)
    prediction_label.config(text=prediction.to_string())

def save_prediction():
    file_path = filedialog.asksaveasfilename(defaultextension=".csv")
    prediction.to_csv(file_path, index=False)

root = tk.Tk()
root.title("VAR Prediction")
root.geometry("600x600")

select_history_button = tk.Button(root, text="Select History", command=select_history)
select_history_button.pack()

select_future_button = tk.Button(root, text="Select Future", command=select_future)
select_future_button.pack()

predict_button = tk.Button(root, text="Predict", command=predict)
predict_button.pack()

prediction_label = tk.Label(root)
prediction_label.pack()

save_prediction_button = tk.Button(root, text="Save Prediction", command=save_prediction)
save_prediction_button.pack()

root.mainloop()
